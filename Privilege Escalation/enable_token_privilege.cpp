#include <stdio.h>
#include <tchar.h>
#include <Windows.h>

BOOL EnablePrivileges(HANDLE hProcess, const _TCHAR* pszPrivilegesName, PHANDLE hToken)
{
	LUID luidValue = { 0 };
	TOKEN_PRIVILEGES tokenPrivileges = { 0 };
	BOOL bRet = FALSE;
	DWORD dwRet = 0;

	bRet = OpenProcessToken(hProcess, TOKEN_ADJUST_PRIVILEGES, hToken);
	if (FALSE == bRet) {
		printf("OpenProcessToken failed.\n");
		return FALSE;
	}

	bRet = LookupPrivilegeValue(NULL, pszPrivilegesName, &luidValue);
	if (FALSE == bRet) {
		printf("LookupPrivilegeValue failed.\n");
		return FALSE;
	}

	tokenPrivileges.PrivilegeCount = 1;
	tokenPrivileges.Privileges[0].Luid = luidValue;
	tokenPrivileges.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;

	bRet = AdjustTokenPrivileges(*hToken, FALSE, &tokenPrivileges, 0, NULL, NULL);
	if (FALSE == bRet) {
		printf("AdjustTokenPrivileges failed.\n");
		return FALSE;
	}
	else {
		dwRet = GetLastError();
		if (ERROR_SUCCESS == dwRet) {
			return TRUE;
		}
		else if (ERROR_NOT_ALL_ASSIGNED == dwRet) {
			printf("ERROR_NOT_ALL_ASSIGNED.\n");
			return FALSE;
		}
	}
	return FALSE;
}

int _tmain() {
	HANDLE hProcess = GetCurrentProcess();
	HANDLE hToken = NULL;

	if (FALSE == EnablePrivileges(hProcess, SE_SHUTDOWN_NAME, &hToken)) {
		printf("Enable privilege failed.\n");
	}
	else {
		printf("Enable privilege succeeded.\n");
	}

	CloseHandle(hToken);
	CloseHandle(hProcess);
	system("pause");
	return 0;
}