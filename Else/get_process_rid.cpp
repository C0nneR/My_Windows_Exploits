#include<stdio.h>
#include<Windows.h>

int main() {
	HANDLE hProcess;
	HANDLE hToken;
	BOOL result = FALSE;
	DWORD len;
	PSID* sid = NULL;

	hProcess = GetCurrentProcess();
	do {
		result = OpenProcessToken(hProcess, TOKEN_QUERY, &hToken);
		if (!result) {
			printf("OpenProcessToken failed.\n");
			break;
		}

		result = GetTokenInformation(hToken, TokenIntegrityLevel, 0, 0, &len);
		if (!(!result && GetLastError() == 122)) {
			printf("GetTokenInformation failed (1).\n");
			break;
		}

		sid = (PSID*)LocalAlloc(0, len);
		if (NULL == sid) {
			printf("LocalAlloc failed.\n");
			break;
		}

		result = GetTokenInformation(hToken, TokenIntegrityLevel, sid, len, &len);
		if (!result) {
			printf("GetTokenInformation failed (2).\n");
			break;
		}

		PUCHAR count = GetSidSubAuthorityCount(*sid);
		PDWORD rid = GetSidSubAuthority(*sid, (unsigned char)(*count - 1));
		printf("RID: %X\n", *rid);

	} while (FALSE);

	if (NULL != sid) {
		LocalFree(sid);
	}
	CloseHandle(hToken);
	CloseHandle(hProcess);
	system("pause");
	return 0;
}