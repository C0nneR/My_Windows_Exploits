#include <stdio.h>
#include <tchar.h>
#include <Windows.h>

BOOL GetTokenPrivileges() {
	HANDLE hProcess;
	HANDLE hToken;
	BOOL bRet = FALSE;
	DWORD dwLen;
	TOKEN_PRIVILEGES* pTokenPrivileges = NULL;
	TCHAR szPrivilegeName[256];
	memset(szPrivilegeName, '\0', 512);

	hProcess = GetCurrentProcess();
	do {
		bRet = OpenProcessToken(hProcess, TOKEN_QUERY, &hToken);
		if (!bRet) {
			printf("OpenProcessToken failed.\n");
			bRet = FALSE;
			break;
		}

		bRet = GetTokenInformation(hToken, TokenPrivileges, NULL, 0, &dwLen);
		if (!(!bRet && GetLastError() == 122)) {
			printf("GetTokenInformation failed (1).\n");
			bRet = FALSE;
			break;
		}

		pTokenPrivileges = (TOKEN_PRIVILEGES*)LocalAlloc(0, dwLen);
		if (NULL == pTokenPrivileges) {
			printf("LocalAlloc failed.\n");
			bRet = FALSE;
			break;
		}

		bRet = GetTokenInformation(hToken, TokenPrivileges, pTokenPrivileges, dwLen, &dwLen);
		if (!bRet) {
			printf("GetTokenInformation failed (2).\n");
			bRet = FALSE;
			break;
		}
		DWORD dwPrivilegeCount = (*pTokenPrivileges).PrivilegeCount;
		printf("PrivilegeCount: %d.\n", dwPrivilegeCount);

		for (int i = 0; i < dwPrivilegeCount; i++) {
			dwLen = 256;
			bRet = LookupPrivilegeNameW(NULL, &((*pTokenPrivileges).Privileges[i].Luid), szPrivilegeName, &dwLen);
			if (bRet) {
				wprintf(_T("%s: "), szPrivilegeName);
			}
			else {
				printf("LookupPrivilegeName failed.: ");
			}

			if ((*pTokenPrivileges).Privileges[i].Attributes && SE_PRIVILEGE_ENABLED) {
				printf("Enabled.\n");
			}
			else {
				printf("Disabled.\n");
			}
		}
		bRet = TRUE;

	} while (FALSE);

	if (NULL != pTokenPrivileges) {
		LocalFree(pTokenPrivileges);
	}
	CloseHandle(hToken);
	CloseHandle(hProcess);
	return bRet;
}

int main() {
	BOOL bRet = GetTokenPrivileges();
	if (bRet) {
		printf("GetTokenPrivileges succeeded.\n");
	}
	else {
		printf("GetTokenPrivileges failed.\n");
	}

	system("pause");
	return 0;
}