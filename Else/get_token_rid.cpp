#include <stdio.h>
#include <Windows.h>

DWORD GetProcessRID() {
	HANDLE hProcess;
	HANDLE hToken;
	BOOL bRet = FALSE;
	DWORD dwLen;
	PSID* pSid = NULL;
	DWORD dwRet = 0;

	hProcess = GetCurrentProcess();
	do {
		bRet = OpenProcessToken(hProcess, TOKEN_QUERY, &hToken);
		if (!bRet) {
			printf("OpenProcessToken failed.\n");
			break;
		}

		bRet = GetTokenInformation(hToken, TokenIntegrityLevel, NULL, 0, &dwLen);
		if (!(!bRet && GetLastError() == 122)) {
			printf("GetTokenInformation failed (1).\n");
			break;
		}

		pSid = (PSID*)LocalAlloc(0, dwLen);
		if (NULL == pSid) {
			printf("LocalAlloc failed.\n");
			break;
		}

		bRet = GetTokenInformation(hToken, TokenIntegrityLevel, pSid, dwLen, &dwLen);
		if (!bRet) {
			printf("GetTokenInformation failed (2).\n");
			break;
		}

		PUCHAR pCount = GetSidSubAuthorityCount(*pSid);
		dwRet = *(GetSidSubAuthority(*pSid, (unsigned char)(*pCount - 1)));

	} while (FALSE);

	if (NULL != pSid) {
		LocalFree(pSid);
	}
	CloseHandle(hToken);
	CloseHandle(hProcess);
	return dwRet;
}

int main() {
	DWORD dwRet = GetProcessRID();
	if (dwRet) {
		printf("RID: %X.\n", dwRet);
	}
	else {
		printf("GetProcessRID failed.\n");
	}

	system("pause");
	return 0;
}