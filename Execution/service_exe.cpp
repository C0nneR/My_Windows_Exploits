#include <tchar.h>
#include <Windows.h>
#include <iostream>
#include <fstream>

void __stdcall ServiceMain(DWORD dwArgc, TCHAR* lpszArgv);
void __stdcall ServiceCtrlHandle(DWORD dwOperation);
BOOL MySetServieStatus(DWORD dwState, DWORD dwExitCode, DWORD dwProgress);
void DoTask();

TCHAR g_szServiceName[MAX_PATH] = _T("test");
SERVICE_STATUS_HANDLE g_ServiceStatusHandle = { 0 };

int main()
{
	SERVICE_TABLE_ENTRY stDispatchTable[] = { { g_szServiceName, (LPSERVICE_MAIN_FUNCTION)ServiceMain}, {NULL, NULL} };
	StartServiceCtrlDispatcher(stDispatchTable);

	return 0;
}


void __stdcall ServiceMain(DWORD dwArgc, TCHAR* lpszArgv)
{
	g_ServiceStatusHandle = RegisterServiceCtrlHandler(g_szServiceName, ServiceCtrlHandle);

	MySetServieStatus(SERVICE_START_PENDING, 0, 1);
	MySetServieStatus(SERVICE_RUNNING, 0, 0);

	DoTask();
}


void __stdcall ServiceCtrlHandle(DWORD dwOperateCode)
{
	switch (dwOperateCode)
	{
	case SERVICE_CONTROL_PAUSE:
	{
		MySetServieStatus(SERVICE_PAUSE_PENDING, 0, 1);
		MySetServieStatus(SERVICE_PAUSED, 0, 0);
		break;
	}
	case SERVICE_CONTROL_CONTINUE:
	{
		MySetServieStatus(SERVICE_CONTINUE_PENDING, 0, 1);
		MySetServieStatus(SERVICE_RUNNING, 0, 0);
		break;
	}
	case SERVICE_CONTROL_STOP:
	{
		MySetServieStatus(SERVICE_STOP_PENDING, 0, 1);
		MySetServieStatus(SERVICE_STOPPED, 0, 0);
		break;
	}
	case SERVICE_CONTROL_INTERROGATE:
	{
		break;
	}
	default:
		break;
	}
}

BOOL MySetServieStatus(DWORD dwState, DWORD dwExitCode, DWORD dwProgress)
{
	SERVICE_STATUS serviceStatus = { 0 };
	BOOL bRet = FALSE;

	RtlZeroMemory(&serviceStatus, sizeof(serviceStatus));
	serviceStatus.dwServiceType = SERVICE_WIN32_OWN_PROCESS;
	serviceStatus.dwCurrentState = dwState;
	serviceStatus.dwControlsAccepted = SERVICE_ACCEPT_STOP | SERVICE_ACCEPT_PAUSE_CONTINUE | SERVICE_ACCEPT_SHUTDOWN;
	serviceStatus.dwWin32ExitCode = dwExitCode;
	serviceStatus.dwWaitHint = 3000;

	bRet = SetServiceStatus(g_ServiceStatusHandle, &serviceStatus);
	return bRet;
}

void DoTask()
{
	// do your job here

	char data[] = "test";
	std::ofstream file;
	file.open("C:\\Test\\temp.txt");
	file << data;
	file.close();
	return;
}