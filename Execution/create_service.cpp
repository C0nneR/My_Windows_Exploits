// Run as Administrator

#include <stdio.h>
#include <tchar.h>
#include <windows.h>

BOOL ServiceOperation(const TCHAR* pszExe, int iOperation) {
	BOOL bRet = TRUE;
	SC_HANDLE shOSCM = NULL, shService = NULL;
	TCHAR szServiceName[] = _T("test");
	SERVICE_STATUS ss;
	DWORD dwError = 0;

	shOSCM = OpenSCManager(NULL, NULL, SC_MANAGER_ALL_ACCESS);
	if (!shOSCM) {
		printf("OpenSCManager failed with error code %d.\n", GetLastError());
		return FALSE;
	}

	if (0 != iOperation) {
		shService = OpenService(shOSCM, szServiceName, SERVICE_ALL_ACCESS);
		if (!shService) {
			printf("OpenService failed with error code %d.\n", GetLastError());
			CloseServiceHandle(shOSCM);
			shOSCM = NULL;
			return FALSE;
		}
	}

	switch (iOperation) {
	case 0:
	{
		shService = CreateService(shOSCM, szServiceName, szServiceName,
			SERVICE_ALL_ACCESS, SERVICE_WIN32_OWN_PROCESS | SERVICE_INTERACTIVE_PROCESS,
			SERVICE_DEMAND_START, SERVICE_ERROR_NORMAL,
			pszExe, NULL, NULL, NULL, NULL, NULL);
		if (!shService) {
			printf("CreateService failed with error code %d.\n", GetLastError());
			bRet = FALSE;
		}
		break;
	}
	case 1:
	{
		if (!StartService(shService, 0, NULL)) {
			printf("StartService failed with error code %d.\n", GetLastError());
			bRet = FALSE;
		}
		break;
	}
	case 2:
	{
		if (!ControlService(shService, SERVICE_CONTROL_STOP, &ss)) {
			printf("ControlService failed with error code %d.\n", GetLastError());
			bRet = FALSE;
		}
		break;
	}
	case 3:
	{
		if (!DeleteService(shService)) {
			printf("DeleteService failed with error code %d.\n", GetLastError());
			bRet = FALSE;
		}
		break;
	}
	default:
		break;
	}

	if (shService) {
		CloseServiceHandle(shService);
		shService = NULL;
	}
	if (shOSCM) {
		CloseServiceHandle(shOSCM);
		shOSCM = NULL;
	}

	return bRet;
}

int main() {
	BOOL bRet = FALSE;

	// service_exe.exe should implement some functions, for details see service_exe.cpp
	TCHAR szExe[] = _T("C:\\Test\\service_exe.exe");

	bRet = ServiceOperation(szExe, 0);
	if (bRet) {
		printf("CreateService succeeded.\n");
	}
	else {
		printf("CreateService failed.\n");
	}
	system("pause");

	bRet = ServiceOperation(szExe, 1);
	if (bRet) {
		printf("StartService succeeded.\n");
	}
	else {
		printf("StartService failed.\n");
	}
	system("pause");

	bRet = ServiceOperation(szExe, 2);
	if (bRet) {
		printf("StopService succeeded.\n");
	}
	else {
		printf("StopService failed.\n");
	}
	system("pause");

	bRet = ServiceOperation(szExe, 3);
	if (bRet) {
		printf("DeleteService succeeded.\n");
	}
	else {
		printf("DeleteService failed.\n");
	}
	system("pause");

	return 0;
}