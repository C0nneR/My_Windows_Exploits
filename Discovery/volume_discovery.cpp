#include <windows.h>
#include <stdio.h>

void DisplayVolumePaths(PWCHAR pwszVolumeName) {
    DWORD dwCharCount = MAX_PATH + 1;
    PWCHAR pwszNames = NULL;
    PWCHAR pwszNameIdx = NULL;
    BOOL bSuccess = FALSE;

    for (;;) {
        pwszNames = (PWCHAR)new BYTE[dwCharCount * sizeof(WCHAR)];
        if (!pwszNames) {
            return;
        }

        bSuccess = GetVolumePathNamesForVolumeNameW(pwszVolumeName, pwszNames, dwCharCount, &dwCharCount);
        if (bSuccess) {
            break;
        }

        if (GetLastError() != ERROR_MORE_DATA) {
            break;
        }

        delete[] pwszNames;
        pwszNames = NULL;
    }

    if (bSuccess) {
        for (pwszNameIdx = pwszNames; pwszNameIdx[0] != L'\0'; pwszNameIdx += wcslen(pwszNameIdx) + 1) {
            wprintf(L"\t%s", pwszNameIdx);
        }
        wprintf(L"\n");
    }

    if (pwszNames != NULL) {
        delete[] pwszNames;
        pwszNames = NULL;
    }

    return;
}

void EnumerateVolume() {
    DWORD dwCharCount = 0;
    WCHAR wszDeviceName[MAX_PATH] = L"";
    DWORD dwError = ERROR_SUCCESS;
    HANDLE hFindHandle = INVALID_HANDLE_VALUE;
    size_t index = 0;
    BOOL bSuccess = FALSE;
    WCHAR wszVolumeName[MAX_PATH] = L"";

    hFindHandle = FindFirstVolumeW(wszVolumeName, ARRAYSIZE(wszVolumeName));
    if (hFindHandle == INVALID_HANDLE_VALUE) {
        dwError = GetLastError();
        wprintf(L"FindFirstVolumeW failed with error code %d.\n", dwError);
        return;
    }

    for (;;) {
        index = wcslen(wszVolumeName) - 1;
        if (wszVolumeName[0] != L'\\' ||
            wszVolumeName[1] != L'\\' ||
            wszVolumeName[2] != L'?' ||
            wszVolumeName[3] != L'\\' ||
            wszVolumeName[index] != L'\\') {
            dwError = ERROR_BAD_PATHNAME;
            wprintf(L"FindFirstVolumeW/FindNextVolumeW return a bad path: %s.\n", wszVolumeName);
            break;
        }

        wszVolumeName[index] = L'\0';
        dwCharCount = QueryDosDeviceW(&wszVolumeName[4], wszDeviceName, ARRAYSIZE(wszDeviceName));
        wszVolumeName[index] = L'\\';

        if (dwCharCount == 0) {
            dwError = GetLastError();
            wprintf(L"QueryDosDeviceW failed with error code %d.\n", dwError);
            break;
        }

        wprintf(L"\nFound a device: %s.\n", wszDeviceName);
        wprintf(L"Volume name: %s.\n", wszVolumeName);
        wprintf(L"Paths:");
        DisplayVolumePaths(wszVolumeName);

        bSuccess = FindNextVolumeW(hFindHandle, wszVolumeName, ARRAYSIZE(wszVolumeName));
        if (!bSuccess) {
            dwError = GetLastError();
            if (dwError != ERROR_NO_MORE_FILES) {
                wprintf(L"FindNextVolumeW failed with error code %d.\n", dwError);
                break;
            }

            dwError = ERROR_SUCCESS;
            break;
        }
    }

    FindVolumeClose(hFindHandle);
    hFindHandle = INVALID_HANDLE_VALUE;

    return;
}

void wmain()
{
    EnumerateVolume();

    system("pause");
    return;
}