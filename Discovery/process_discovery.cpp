#include <stdio.h>
#include <tchar.h>
#include <Windows.h>
#include <TlHelp32.h>

//BOOL EnumerateProcess() {
//	PROCESSENTRY32 pe32 = { 0 };
//	pe32.dwSize = sizeof(PROCESSENTRY32);
//
//	HANDLE hProcessSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);
//	if (INVALID_HANDLE_VALUE == hProcessSnap) {
//		printf("CreateToolhelp32Snapshot failed.\n");
//		return FALSE;
//	}
//
//	printf("PID\tName\n");
//	BOOL bRet = Process32First(hProcessSnap, &pe32);
//	while (bRet) {
//		printf("%d\t", pe32.th32ProcessID);
//		wprintf(_T("%s\n"), pe32.szExeFile);
//		bRet = Process32Next(hProcessSnap, &pe32);
//	}
//
//	CloseHandle(hProcessSnap);
//	return TRUE;
//}

DWORD GetProcessPID(const _TCHAR* pszProcessName) {
	DWORD dwPid = 0;
	PROCESSENTRY32 pe32 = { 0 };
	pe32.dwSize = sizeof(PROCESSENTRY32);

	HANDLE hProcessSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);
	if (INVALID_HANDLE_VALUE == hProcessSnap) {
		printf("CreateToolhelp32Snapshot failed.\n");
		return FALSE;
	}

	BOOL bRet = Process32First(hProcessSnap, &pe32);
	while (bRet) {
		if (!lstrcmpiW(pszProcessName, pe32.szExeFile))
		{
			dwPid = pe32.th32ProcessID;
			break;
		}
		bRet = Process32Next(hProcessSnap, &pe32);
	}

	CloseHandle(hProcessSnap);
	return dwPid;
}

int main() {
	//if (FALSE == EnumerateProcess()) {
	//	printf("EnumerateProcess failed.\n");
	//}
	//else {
	//	printf("EnumerateProcess succeeded.\n");
	//}

	DWORD dwRet = GetProcessPID(L"explorer.exe");
	if (dwRet) {
		printf("PID: %d.\n", dwRet);
	}
	else {
		printf("GetProcessPID failed.\n");
	}

	system("pause");
	return 0;
}